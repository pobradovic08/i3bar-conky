#!/usr/bin/python2.7
# -*- coding: utf-8 -*-
import json
import sys
from os.path import expanduser

reload(sys)
sys.setdefaultencoding('utf8')


# Read fetched data from input file
# This file is generated by cryptocompare-get-api-data script
# Should be in crontab for desired update interval

def get_cur_symbol(currency):
    if currency == 'USD':
        return '$'


def get_trend_symbol(indicator):
    if indicator > 0:
        return '▼'
    elif indicator < 0:
        return '▲'
    else:
        return '━'


def get_conky_string(text, indicator):
    color = ""
    if indicator > 0:
        color = ' color=\'#ffbaba\''
    elif indicator < 0:
        color = ' color=\'#baffba\''

    return '<span%s font_desc=\'ClearSans Bold\'>%s</span>' % (color, text)


data_file = open(expanduser('~/.cryptocompare-last'), 'r')
file_contents = data_file.read()

if len(sys.argv) == 3:
    # User selected coin
    from_coin = sys.argv[1].upper()
    to_coin = sys.argv[2].upper()
    # Parse json for all coins
    data = json.loads(file_contents)
    # Separate data just for selected coin
    if from_coin in data['new']:
        # Build return string
        if to_coin in data['new'][from_coin]:
            value = data['new'][from_coin][to_coin]
            indicator = 0
            if from_coin in data['old']:
                indicator = data['old'][from_coin][to_coin] - value
            print get_conky_string("%s %s%s" % (
                    get_trend_symbol(indicator),
                    get_cur_symbol(to_coin),
                    value), indicator)
            exit(0)

print "N/A"
